#\u670D\u52A1\u5668\u7AEF\u53E3\u8BBE\u7F6E\u4E3A8080
server.port= 443
#\u670D\u52A1\u5668\u4E0A\u4E0B\u6587\u8DEF\u5F84/sell
server.servlet.context-path=/sell
\u65E5\u5FD7\u7684\u8F93\u51FA\u6587\u4EF6
logging.file=log.log
# thymeleaf\u542F\u7528\u7F13\u5B58:\u5EFA\u8BAE\u751F\u4EA7\u5F00\u542F
spring.thymeleaf.cache=false
# \u5EFA\u8BAE\u6A21\u7248\u662F\u5426\u5B58\u5728
spring.thymeleaf.check-template-location=true
# Content-Type \u503C
spring.thymeleaf.servlet.content-type=text/html
# \u662F\u5426\u542F\u7528\u6A21\u7248\u5F15\u64CE
spring.thymeleaf.enabled=true
# thymeleaf\u6A21\u7248\u7F16\u7801
spring.thymeleaf.encoding=utf-8
# \u5E94\u8BE5\u4ECE\u89E3\u6790\u4E2D\u6392\u9664\u7684\u89C6\u56FE\u540D\u79F0\u5217\u8868\uFF08\u7528\u9017\u53F7\u5206\u9694\uFF09
spring.thymeleaf.excluded-view-names=
# thymeleaf\u6A21\u7248\u6A21\u5F0F
spring.thymeleaf.mode=HTML5
# thymeleaf\u6A21\u7248\u5B58\u653E\u8DEF\u5F84
spring.thymeleaf.prefix=classpath:/templates/
# thymeleaf\u6A21\u7248\u540E\u7F00
spring.thymeleaf.suffix=.html

spring.thymeleaf.template-resolver-order = 1

#mysql\u7684\u8DEF\u5F84\u5730\u5740+\u7AEF\u53E3\u53F7+\u6570\u636E\u5E93\u540D\u79F0
spring.datasource.url = jdbc:mysql://suxinhaixp.xyz:3306/sit
#\u6570\u636E\u5E93\u8FDE\u63A5\u7528\u6237\u540D\u5E10\u53F7
spring.datasource.username = root
#\u6570\u636E\u5E93\u8FDE\u63A5\u7528\u6237\u540D\u5BC6\u7801
spring.datasource.password = root
#\u6570\u636E\u5E93\u8FDE\u63A5\u9A71\u52A8\u7C7B
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Specify the DBMS
spring.jpa.database = MYSQL
# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
# Naming strategy\uFF01
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
#\u57FA\u672C\u6D88\u606F\u76EE\u5F55
spring.messages.basename=i18n.login
#druid\u914D\u7F6E
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#   \u6570\u636E\u6E90\u5176\u4ED6\u914D\u7F6E
# \u521D\u59CB\u5316\u65F6\u5EFA\u7ACB\u7269\u7406\u8FDE\u63A5\u7684\u4E2A\u6570
spring.datasource.initialSize= 5
# \u6700\u5C0F\u8FDE\u63A5\u6C60\u6570\u91CF
spring.datasource.minIdle= 5
# \u6700\u5927\u8FDE\u63A5\u6C60\u6570\u91CF
spring.datasource.maxActive= 20
# \u83B7\u53D6\u8FDE\u63A5\u65F6\u6700\u5927\u7B49\u5F85\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2
spring.datasource.maxWait=  60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.timeBetweenEvictionRunsMillis=  60000
# \u8FDE\u63A5\u4FDD\u6301\u7A7A\u95F2\u800C\u4E0D\u88AB\u9A71\u9010\u7684\u6700\u5C0F\u65F6\u95F4
spring.datasource.minEvictableIdleTimeMillis= 300000
# \u7528\u6765\u68C0\u6D4B\u8FDE\u63A5\u662F\u5426\u6709\u6548\u7684sql\uFF0C\u8981\u6C42\u662F\u4E00\u4E2A\u67E5\u8BE2\u8BED\u53E5
spring.datasource.validationQuery= SELECT 1 FROM DUAL
# \u5EFA\u8BAE\u914D\u7F6E\u4E3Atrue\uFF0C\u4E0D\u5F71\u54CD\u6027\u80FD\uFF0C\u5E76\u4E14\u4FDD\u8BC1\u5B89\u5168\u6027\u3002\u7533\u8BF7\u8FDE\u63A5\u7684\u65F6\u5019\u68C0\u6D4B\uFF0C\u5982\u679C\u7A7A\u95F2\u65F6\u95F4\u5927\u4E8EtimeBetweenEvictionRunsMillis\uFF0C\u6267\u884CvalidationQuery\u68C0\u6D4B\u8FDE\u63A5\u662F\u5426\u6709\u6548\u3002
spring.datasource.testWhileIdle= true
# \u7533\u8BF7\u8FDE\u63A5\u65F6\u6267\u884CvalidationQuery\u68C0\u6D4B\u8FDE\u63A5\u662F\u5426\u6709\u6548\uFF0C\u505A\u4E86\u8FD9\u4E2A\u914D\u7F6E\u4F1A\u964D\u4F4E\u6027\u80FD\u3002
spring.datasource.testOnBorrow= false
spring.datasource.testOnReturn= false
spring.datasource.poolPreparedStatements= true
#   \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.filters= stat,wall
#  ,log4j
spring.datasource.maxPoolPreparedStatementPerConnectionSize= 20
spring.datasource.useGlobalDataSourceStat= true  
spring.datasource.connectionProperties = druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500


spring.jackson.default-property-inclusion=non_null


#spring.freemarker.allow-request-override=false
#spring.freemarker.cache=true
#spring.freemarker.check-template-location=true
#spring.freemarker.charset=UTF-8
#spring.freemarker.content-type=text/html
#spring.freemarker.expose-request-attributes=false
#spring.freemarker.expose-session-attributes=false
#spring.freemarker.expose-spring-macro-helpers=false
##spring.freemarker.prefix=
#spring.freemarker.suffix=.ftl
#
server.ssl.key-store= classpath:suxinhaixp.xyz.jks
server.ssl.key-store-password=8v2cnsplxu2l
server.ssl.keyStoreType = JKS



# Redis\u6570\u636E\u5E93\u7D22\u5F15\uFF08\u9ED8\u8BA4\u4E3A0\uFF09
spring.redis.database=0
# Redis\u670D\u52A1\u5668\u5730\u5740
spring.redis.host=suxinhaixp.xyz
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u7AEF\u53E3
spring.redis.port=6379
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u5BC6\u7801\uFF08\u9ED8\u8BA4\u4E3A\u7A7A\uFF09
spring.redis.password=
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.jedis.pool.max-active=200
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.jedis.pool.max-wait=
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.jedis.pool.max-idle=10
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.jedis.pool.min-idle=0
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09
spring.redis.timeout=1000ms
